// Generated from target/antlr4/BlazeExpressionLexer.g4 by ANTLR 4.9.0-SNAPSHOT


import {LiteralFactory} from "./../LiteralFactory";


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class BlazeExpressionLexer extends Lexer {
	public static readonly WS = 1;
	public static readonly START_QUOTE = 2;
	public static readonly START_DOUBLE_QUOTE = 3;
	public static readonly INTEGER_LITERAL = 4;
	public static readonly NUMERIC_LITERAL = 5;
	public static readonly LEADING_ZERO_INTEGER_LITERAL = 6;
	public static readonly AND = 7;
	public static readonly BETWEEN = 8;
	public static readonly DATE = 9;
	public static readonly DAYS = 10;
	public static readonly DISTINCT = 11;
	public static readonly EMPTY = 12;
	public static readonly FALSE = 13;
	public static readonly FROM = 14;
	public static readonly FULL = 15;
	public static readonly HOURS = 16;
	public static readonly IN = 17;
	public static readonly INTERVAL = 18;
	public static readonly IS = 19;
	public static readonly JOIN = 20;
	public static readonly LEFT = 21;
	public static readonly MINUTES = 22;
	public static readonly MONTHS = 23;
	public static readonly NOT = 24;
	public static readonly NULL = 25;
	public static readonly ON = 26;
	public static readonly OR = 27;
	public static readonly RIGHT = 28;
	public static readonly SECONDS = 29;
	public static readonly SELECT = 30;
	public static readonly TIME = 31;
	public static readonly TIMESTAMP = 32;
	public static readonly TRUE = 33;
	public static readonly WHERE = 34;
	public static readonly YEARS = 35;
	public static readonly LESS = 36;
	public static readonly LESS_EQUAL = 37;
	public static readonly GREATER = 38;
	public static readonly GREATER_EQUAL = 39;
	public static readonly EQUAL = 40;
	public static readonly NOT_EQUAL = 41;
	public static readonly PLUS = 42;
	public static readonly MINUS = 43;
	public static readonly ASTERISK = 44;
	public static readonly SLASH = 45;
	public static readonly PERCENT = 46;
	public static readonly LP = 47;
	public static readonly RP = 48;
	public static readonly LB = 49;
	public static readonly RB = 50;
	public static readonly COMMA = 51;
	public static readonly DOT = 52;
	public static readonly COLON = 53;
	public static readonly EXCLAMATION_MARK = 54;
	public static readonly IDENTIFIER = 55;
	public static readonly QUOTED_IDENTIFIER = 56;
	public static readonly EXPRESSION_END = 57;
	public static readonly EXPRESSION_START = 58;
	public static readonly TEXT = 59;
	public static readonly TEXT_IN_QUOTE = 60;
	public static readonly END_QUOTE = 61;
	public static readonly TEXT_IN_DOUBLE_QUOTE = 62;
	public static readonly END_DOUBLE_QUOTE = 63;
	public static readonly TEMPLATE = 1;
	public static readonly QUOTE_STRING = 2;
	public static readonly DOUBLE_QUOTE_STRING = 3;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE", "TEMPLATE", "QUOTE_STRING", "DOUBLE_QUOTE_STRING",
	];

	public static readonly ruleNames: string[] = [
		"WS", "EOL", "DIGIT", "DIGITS", "DIGIT_NOT_ZERO", "INTEGER", "EXPONENT_PART", 
		"SIGNED_INTEGER", "ESCAPE_SEQUENCE", "HEX_DIGIT", "UNICODE_ESCAPE", "START_QUOTE", 
		"START_DOUBLE_QUOTE", "INTEGER_LITERAL", "NUMERIC_LITERAL", "LEADING_ZERO_INTEGER_LITERAL", 
		"AND", "BETWEEN", "DATE", "DAYS", "DISTINCT", "EMPTY", "FALSE", "FROM", 
		"FULL", "HOURS", "IN", "INTERVAL", "IS", "JOIN", "LEFT", "MINUTES", "MONTHS", 
		"NOT", "NULL", "ON", "OR", "RIGHT", "SECONDS", "SELECT", "TIME", "TIMESTAMP", 
		"TRUE", "WHERE", "YEARS", "LESS", "LESS_EQUAL", "GREATER", "GREATER_EQUAL", 
		"EQUAL", "NOT_EQUAL", "PLUS", "MINUS", "ASTERISK", "SLASH", "PERCENT", 
		"LP", "RP", "LB", "RB", "COMMA", "DOT", "COLON", "EXCLAMATION_MARK", "IDENTIFIER", 
		"QUOTED_IDENTIFIER", "EXPRESSION_END", "EXPRESSION_START", "TEXT", "TEXT_IN_QUOTE", 
		"END_QUOTE", "TEXT_IN_DOUBLE_QUOTE", "END_DOUBLE_QUOTE",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, "'<'", "'<='", "'>'", "'>='", "'='", undefined, "'+'", "'-'", 
		"'*'", "'/'", "'%'", "'('", "')'", "'['", "']'", "','", "'.'", "':'", 
		"'!'", undefined, undefined, "'}'", "'#{'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "WS", "START_QUOTE", "START_DOUBLE_QUOTE", "INTEGER_LITERAL", 
		"NUMERIC_LITERAL", "LEADING_ZERO_INTEGER_LITERAL", "AND", "BETWEEN", "DATE", 
		"DAYS", "DISTINCT", "EMPTY", "FALSE", "FROM", "FULL", "HOURS", "IN", "INTERVAL", 
		"IS", "JOIN", "LEFT", "MINUTES", "MONTHS", "NOT", "NULL", "ON", "OR", 
		"RIGHT", "SECONDS", "SELECT", "TIME", "TIMESTAMP", "TRUE", "WHERE", "YEARS", 
		"LESS", "LESS_EQUAL", "GREATER", "GREATER_EQUAL", "EQUAL", "NOT_EQUAL", 
		"PLUS", "MINUS", "ASTERISK", "SLASH", "PERCENT", "LP", "RP", "LB", "RB", 
		"COMMA", "DOT", "COLON", "EXCLAMATION_MARK", "IDENTIFIER", "QUOTED_IDENTIFIER", 
		"EXPRESSION_END", "EXPRESSION_START", "TEXT", "TEXT_IN_QUOTE", "END_QUOTE", 
		"TEXT_IN_DOUBLE_QUOTE", "END_DOUBLE_QUOTE",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(BlazeExpressionLexer._LITERAL_NAMES, BlazeExpressionLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return BlazeExpressionLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	private getText(): string {
	    return this.text;
	}
	private setText(text: string) {
	    this.text = text;
	}


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(BlazeExpressionLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "BlazeExpressionLexer.g4"; }

	// @Override
	public get ruleNames(): string[] { return BlazeExpressionLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return BlazeExpressionLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return BlazeExpressionLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return BlazeExpressionLexer.modeNames; }

	// @Override
	public action(_localctx: RuleContext, ruleIndex: number, actionIndex: number): void {
		switch (ruleIndex) {
		case 65:
			this.QUOTED_IDENTIFIER_action(_localctx, actionIndex);
			break;

		case 68:
			this.TEXT_action(_localctx, actionIndex);
			break;
		}
	}
	private QUOTED_IDENTIFIER_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 0:
			 this.setText(LiteralFactory.unescapeString(this.getText())); 
			break;
		}
	}
	private TEXT_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 1:
			 this.setText(LiteralFactory.unescapeTemplateText(this.getText())); 
			break;
		}
	}
	// @Override
	public sempred(_localctx: RuleContext, ruleIndex: number, predIndex: number): boolean {
		switch (ruleIndex) {
		case 68:
			return this.TEXT_sempred(_localctx, predIndex);
		}
		return true;
	}
	private TEXT_sempred(_localctx: RuleContext, predIndex: number): boolean {
		switch (predIndex) {
		case 0:
			return  this._input.LA(1) != LiteralFactory.OPEN_BRACKET ;
		}
		return true;
	}

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02A\u0200\b\x01" +
		"\b\x01\b\x01\b\x01\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t" +
		"\x05\x04\x06\t\x06\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t" +
		"\v\x04\f\t\f\x04\r\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11" +
		"\t\x11\x04\x12\t\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16" +
		"\t\x16\x04\x17\t\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B" +
		"\t\x1B\x04\x1C\t\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t" +
		" \x04!\t!\x04\"\t\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(" +
		"\x04)\t)\x04*\t*\x04+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041" +
		"\t1\x042\t2\x043\t3\x044\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04" +
		":\t:\x04;\t;\x04<\t<\x04=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x04B\tB\x04" +
		"C\tC\x04D\tD\x04E\tE\x04F\tF\x04G\tG\x04H\tH\x04I\tI\x04J\tJ\x03\x02\x03" +
		"\x02\x05\x02\x9B\n\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x05\x03" +
		"\xA2\n\x03\x03\x04\x03\x04\x03\x05\x06\x05\xA7\n\x05\r\x05\x0E\x05\xA8" +
		"\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x05\x07\xB0\n\x07\x05\x07\xB2" +
		"\n\x07\x03\b\x03\b\x03\b\x03\t\x05\t\xB8\n\t\x03\t\x03\t\x03\n\x03\n\x03" +
		"\n\x03\n\x03\n\x05\n\xC1\n\n\x03\n\x05\n\xC4\n\n\x03\v\x03\v\x03\f\x03" +
		"\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E" +
		"\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x10\x05\x10" +
		"\xDD\n\x10\x03\x10\x03\x10\x03\x10\x05\x10\xE2\n\x10\x03\x11\x03\x11\x03" +
		"\x11\x03\x12\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03\x13\x03" +
		"\x13\x03\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03" +
		"\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x16\x03" +
		"\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x17\x03\x17\x03\x17\x03\x17\x03" +
		"\x17\x03\x17\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x19\x03" +
		"\x19\x03\x19\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03" +
		"\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C\x03" +
		"\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03" +
		"\x1E\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03 \x03" +
		" \x03 \x03 \x03 \x03!\x03!\x03!\x03!\x03!\x03!\x03!\x03!\x03\"\x03\"\x03" +
		"\"\x03\"\x03\"\x03\"\x03\"\x03#\x03#\x03#\x03#\x03$\x03$\x03$\x03$\x03" +
		"$\x03%\x03%\x03%\x03&\x03&\x03&\x03\'\x03\'\x03\'\x03\'\x03\'\x03\'\x03" +
		"(\x03(\x03(\x03(\x03(\x03(\x03(\x03(\x03)\x03)\x03)\x03)\x03)\x03)\x03" +
		")\x03*\x03*\x03*\x03*\x03*\x03+\x03+\x03+\x03+\x03+\x03+\x03+\x03+\x03" +
		"+\x03+\x03,\x03,\x03,\x03,\x03,\x03-\x03-\x03-\x03-\x03-\x03-\x03.\x03" +
		".\x03.\x03.\x03.\x03.\x03/\x03/\x030\x030\x030\x031\x031\x032\x032\x03" +
		"2\x033\x033\x034\x034\x034\x034\x054\u019E\n4\x035\x035\x036\x036\x03" +
		"7\x037\x038\x038\x039\x039\x03:\x03:\x03;\x03;\x03<\x03<\x03=\x03=\x03" +
		">\x03>\x03?\x03?\x03@\x03@\x03A\x03A\x03B\x03B\x07B\u01BC\nB\fB\x0EB\u01BF" +
		"\vB\x03C\x03C\x03C\x07C\u01C4\nC\fC\x0EC\u01C7\vC\x03C\x03C\x03C\x03D" +
		"\x03D\x03D\x03D\x03E\x03E\x03E\x03E\x03E\x03F\x03F\x03F\x03F\x03F\x03" +
		"F\x06F\u01DB\nF\rF\x0EF\u01DC\x03F\x03F\x03G\x03G\x03G\x06G\u01E4\nG\r" +
		"G\x0EG\u01E5\x03G\x05G\u01E9\nG\x05G\u01EB\nG\x03H\x03H\x03H\x03H\x03" +
		"I\x03I\x03I\x06I\u01F4\nI\rI\x0EI\u01F5\x03I\x05I\u01F9\nI\x05I\u01FB" +
		"\nI\x03J\x03J\x03J\x03J\x02\x02\x02K\x06\x02\x03\b\x02\x02\n\x02\x02\f" +
		"\x02\x02\x0E\x02\x02\x10\x02\x02\x12\x02\x02\x14\x02\x02\x16\x02\x02\x18" +
		"\x02\x02\x1A\x02\x02\x1C\x02\x04\x1E\x02\x05 \x02\x06\"\x02\x07$\x02\b" +
		"&\x02\t(\x02\n*\x02\v,\x02\f.\x02\r0\x02\x0E2\x02\x0F4\x02\x106\x02\x11" +
		"8\x02\x12:\x02\x13<\x02\x14>\x02\x15@\x02\x16B\x02\x17D\x02\x18F\x02\x19" +
		"H\x02\x1AJ\x02\x1BL\x02\x1CN\x02\x1DP\x02\x1ER\x02\x1FT\x02 V\x02!X\x02" +
		"\"Z\x02#\\\x02$^\x02%`\x02&b\x02\'d\x02(f\x02)h\x02*j\x02+l\x02,n\x02" +
		"-p\x02.r\x02/t\x020v\x021x\x022z\x023|\x024~\x025\x80\x026\x82\x027\x84" +
		"\x028\x86\x029\x88\x02:\x8A\x02;\x8C\x02<\x8E\x02=\x90\x02>\x92\x02?\x94" +
		"\x02@\x96\x02A\x06\x02\x03\x04\x05$\x05\x02\v\v\x0E\x0E\"\"\x04\x02\f" +
		"\f\x0F\x0F\x04\x02GGgg\x04\x02--//\x07\x02ddhhppttvv\x04\x02))^^\x05\x02" +
		"2;CHch\x04\x02CCcc\x04\x02PPpp\x04\x02FFff\x04\x02DDdd\x04\x02VVvv\x04" +
		"\x02YYyy\x04\x02[[{{\x04\x02UUuu\x04\x02KKkk\x04\x02EEee\x04\x02OOoo\x04" +
		"\x02RRrr\x04\x02HHhh\x04\x02NNnn\x04\x02TTtt\x04\x02QQqq\x04\x02WWww\x04" +
		"\x02JJjj\x04\x02XXxx\x04\x02LLll\x04\x02IIii\x07\x02&&C\\aac|\x82\x00" +
		"\b\x02&&2;C\\aac|\x82\x00\x06\x02\f\f\x0F\x0F^^bb\x03\x02%%\x06\x02\f" +
		"\f\x0F\x0F))^^\x06\x02\f\f\x0F\x0F$$^^\x02\u020C\x02\x06\x03\x02\x02\x02" +
		"\x02\x1C\x03\x02\x02\x02\x02\x1E\x03\x02\x02\x02\x02 \x03\x02\x02\x02" +
		"\x02\"\x03\x02\x02\x02\x02$\x03\x02\x02\x02\x02&\x03\x02\x02\x02\x02(" +
		"\x03\x02\x02\x02\x02*\x03\x02\x02\x02\x02,\x03\x02\x02\x02\x02.\x03\x02" +
		"\x02\x02\x020\x03\x02\x02\x02\x022\x03\x02\x02\x02\x024\x03\x02\x02\x02" +
		"\x026\x03\x02\x02\x02\x028\x03\x02\x02\x02\x02:\x03\x02\x02\x02\x02<\x03" +
		"\x02\x02\x02\x02>\x03\x02\x02\x02\x02@\x03\x02\x02\x02\x02B\x03\x02\x02" +
		"\x02\x02D\x03\x02\x02\x02\x02F\x03\x02\x02\x02\x02H\x03\x02\x02\x02\x02" +
		"J\x03\x02\x02\x02\x02L\x03\x02\x02\x02\x02N\x03\x02\x02\x02\x02P\x03\x02" +
		"\x02\x02\x02R\x03\x02\x02\x02\x02T\x03\x02\x02\x02\x02V\x03\x02\x02\x02" +
		"\x02X\x03\x02\x02\x02\x02Z\x03\x02\x02\x02\x02\\\x03\x02\x02\x02\x02^" +
		"\x03\x02\x02\x02\x02`\x03\x02\x02\x02\x02b\x03\x02\x02\x02\x02d\x03\x02" +
		"\x02\x02\x02f\x03\x02\x02\x02\x02h\x03\x02\x02\x02\x02j\x03\x02\x02\x02" +
		"\x02l\x03\x02\x02\x02\x02n\x03\x02\x02\x02\x02p\x03\x02\x02\x02\x02r\x03" +
		"\x02\x02\x02\x02t\x03\x02\x02\x02\x02v\x03\x02\x02\x02\x02x\x03\x02\x02" +
		"\x02\x02z\x03\x02\x02\x02\x02|\x03\x02\x02\x02\x02~\x03\x02\x02\x02\x02" +
		"\x80\x03\x02\x02\x02\x02\x82\x03\x02\x02\x02\x02\x84\x03\x02\x02\x02\x02" +
		"\x86\x03\x02\x02\x02\x02\x88\x03\x02\x02\x02\x02\x8A\x03\x02\x02\x02\x03" +
		"\x8C\x03\x02\x02\x02\x03\x8E\x03\x02\x02\x02\x04\x90\x03\x02\x02\x02\x04" +
		"\x92\x03\x02\x02\x02\x05\x94\x03\x02\x02\x02\x05\x96\x03\x02\x02\x02\x06" +
		"\x9A\x03\x02\x02\x02\b\xA1\x03\x02\x02\x02\n\xA3\x03\x02\x02\x02\f\xA6" +
		"\x03\x02\x02\x02\x0E\xAA\x03\x02\x02\x02\x10\xB1\x03\x02\x02\x02\x12\xB3" +
		"\x03\x02\x02\x02\x14\xB7\x03\x02\x02\x02\x16\xC3\x03\x02\x02\x02\x18\xC5" +
		"\x03\x02\x02\x02\x1A\xC7\x03\x02\x02\x02\x1C\xCE\x03\x02\x02\x02\x1E\xD2" +
		"\x03\x02\x02\x02 \xD6\x03\x02\x02\x02\"\xE1\x03\x02\x02\x02$\xE3\x03\x02" +
		"\x02\x02&\xE6\x03\x02\x02\x02(\xEA\x03\x02\x02\x02*\xF2\x03\x02\x02\x02" +
		",\xF7\x03\x02\x02\x02.\xFC\x03\x02\x02\x020\u0105\x03\x02\x02\x022\u010B" +
		"\x03\x02\x02\x024\u0111\x03\x02\x02\x026\u0116\x03\x02\x02\x028\u011B" +
		"\x03\x02\x02\x02:\u0121\x03\x02\x02\x02<\u0124\x03\x02\x02\x02>\u012D" +
		"\x03\x02\x02\x02@\u0130\x03\x02\x02\x02B\u0135\x03\x02\x02\x02D\u013A" +
		"\x03\x02\x02\x02F\u0142\x03\x02\x02\x02H\u0149\x03\x02\x02\x02J\u014D" +
		"\x03\x02\x02\x02L\u0152\x03\x02\x02\x02N\u0155\x03\x02\x02\x02P\u0158" +
		"\x03\x02\x02\x02R\u015E\x03\x02\x02\x02T\u0166\x03\x02\x02\x02V\u016D" +
		"\x03\x02\x02\x02X\u0172\x03\x02\x02\x02Z\u017C\x03\x02\x02\x02\\\u0181" +
		"\x03\x02\x02\x02^\u0187\x03\x02\x02\x02`\u018D\x03\x02\x02\x02b\u018F" +
		"\x03\x02\x02\x02d\u0192\x03\x02\x02\x02f\u0194\x03\x02\x02\x02h\u0197" +
		"\x03\x02\x02\x02j\u019D\x03\x02\x02\x02l\u019F\x03\x02\x02\x02n\u01A1" +
		"\x03\x02\x02\x02p\u01A3\x03\x02\x02\x02r\u01A5\x03\x02\x02\x02t\u01A7" +
		"\x03\x02\x02\x02v\u01A9\x03\x02\x02\x02x\u01AB\x03\x02\x02\x02z\u01AD" +
		"\x03\x02\x02\x02|\u01AF\x03\x02\x02\x02~\u01B1\x03\x02\x02\x02\x80\u01B3" +
		"\x03\x02\x02\x02\x82\u01B5\x03\x02\x02\x02\x84\u01B7\x03\x02\x02\x02\x86" +
		"\u01B9\x03\x02\x02\x02\x88\u01C0\x03\x02\x02\x02\x8A\u01CB\x03\x02\x02" +
		"\x02\x8C\u01CF\x03\x02\x02\x02\x8E\u01DA\x03\x02\x02\x02\x90\u01EA\x03" +
		"\x02\x02\x02\x92\u01EC\x03\x02\x02\x02\x94\u01FA\x03\x02\x02\x02\x96\u01FC" +
		"\x03\x02\x02\x02\x98\x9B\t\x02\x02\x02\x99\x9B\x05\b\x03\x02\x9A\x98\x03" +
		"\x02\x02\x02\x9A\x99\x03\x02\x02\x02\x9B\x9C\x03\x02\x02\x02\x9C\x9D\b" +
		"\x02\x02\x02\x9D\x07\x03\x02\x02\x02\x9E\x9F\x07\x0F\x02\x02\x9F\xA2\x07" +
		"\f\x02\x02\xA0\xA2\t\x03\x02\x02\xA1\x9E\x03\x02\x02\x02\xA1\xA0\x03\x02" +
		"\x02\x02\xA2\t\x03\x02\x02\x02\xA3\xA4\x042;\x02\xA4\v\x03\x02\x02\x02" +
		"\xA5\xA7\x05\n\x04\x02\xA6\xA5\x03\x02\x02\x02\xA7\xA8\x03\x02\x02\x02" +
		"\xA8\xA6\x03\x02\x02\x02\xA8\xA9\x03\x02\x02\x02\xA9\r\x03\x02\x02\x02" +
		"\xAA\xAB\x043;\x02\xAB\x0F\x03\x02\x02\x02\xAC\xB2\x072\x02\x02\xAD\xAF" +
		"\x05\x0E\x06\x02\xAE\xB0\x05\f\x05\x02\xAF\xAE\x03\x02\x02\x02\xAF\xB0" +
		"\x03\x02\x02\x02\xB0\xB2\x03\x02\x02\x02\xB1\xAC\x03\x02\x02\x02\xB1\xAD" +
		"\x03\x02\x02\x02\xB2\x11\x03\x02\x02\x02\xB3\xB4\t\x04\x02\x02\xB4\xB5" +
		"\x05\x14\t\x02\xB5\x13\x03\x02\x02\x02\xB6\xB8\t\x05\x02\x02\xB7\xB6\x03" +
		"\x02\x02\x02\xB7\xB8\x03\x02\x02\x02\xB8\xB9\x03\x02\x02\x02\xB9\xBA\x05" +
		"\f\x05\x02\xBA\x15\x03\x02\x02\x02\xBB\xC0\x07^\x02\x02\xBC\xC1\t\x06" +
		"\x02\x02\xBD\xBE\x07^\x02\x02\xBE\xC1\x07$\x02\x02\xBF\xC1\t\x07\x02\x02" +
		"\xC0\xBC\x03\x02\x02\x02\xC0\xBD\x03\x02\x02\x02\xC0\xBF\x03\x02\x02\x02" +
		"\xC1\xC4\x03\x02\x02\x02\xC2\xC4\x05\x1A\f\x02\xC3\xBB\x03\x02\x02\x02" +
		"\xC3\xC2\x03\x02\x02\x02\xC4\x17\x03\x02\x02\x02\xC5\xC6\t\b\x02\x02\xC6" +
		"\x19\x03\x02\x02\x02\xC7\xC8\x07^\x02\x02\xC8\xC9\x07w\x02\x02\xC9\xCA" +
		"\x05\x18\v\x02\xCA\xCB\x05\x18\v\x02\xCB\xCC\x05\x18\v\x02\xCC\xCD\x05" +
		"\x18\v\x02\xCD\x1B\x03\x02\x02\x02\xCE\xCF\x07)\x02\x02\xCF\xD0\x03\x02" +
		"\x02\x02\xD0\xD1\b\r\x03\x02\xD1\x1D\x03\x02\x02\x02\xD2\xD3\x07$\x02" +
		"\x02\xD3\xD4\x03\x02\x02\x02\xD4\xD5\b\x0E\x04\x02\xD5\x1F\x03\x02\x02" +
		"\x02\xD6\xD7\x05\x10\x07\x02\xD7!\x03\x02\x02\x02\xD8\xD9\x05\x10\x07" +
		"\x02\xD9\xDA\x070\x02\x02\xDA\xDC\x05\f\x05\x02\xDB\xDD\x05\x12\b\x02" +
		"\xDC\xDB\x03\x02\x02\x02\xDC\xDD\x03\x02\x02\x02\xDD\xE2\x03\x02\x02\x02" +
		"\xDE\xDF\x05\x10\x07\x02\xDF\xE0\x05\x12\b\x02\xE0\xE2\x03\x02\x02\x02" +
		"\xE1\xD8\x03\x02\x02\x02\xE1\xDE\x03\x02\x02\x02\xE2#\x03\x02\x02\x02" +
		"\xE3\xE4\x072\x02\x02\xE4\xE5\x05\f\x05\x02\xE5%\x03\x02\x02\x02\xE6\xE7" +
		"\t\t\x02\x02\xE7\xE8\t\n\x02\x02\xE8\xE9\t\v\x02\x02\xE9\'\x03\x02\x02" +
		"\x02\xEA\xEB\t\f\x02\x02\xEB\xEC\t\x04\x02\x02\xEC\xED\t\r\x02\x02\xED" +
		"\xEE\t\x0E\x02\x02\xEE\xEF\t\x04\x02\x02\xEF\xF0\t\x04\x02\x02\xF0\xF1" +
		"\t\n\x02\x02\xF1)\x03\x02\x02\x02\xF2\xF3\t\v\x02\x02\xF3\xF4\t\t\x02" +
		"\x02\xF4\xF5\t\r\x02\x02\xF5\xF6\t\x04\x02\x02\xF6+\x03\x02\x02\x02\xF7" +
		"\xF8\t\v\x02\x02\xF8\xF9\t\t\x02\x02\xF9\xFA\t\x0F\x02\x02\xFA\xFB\t\x10" +
		"\x02\x02\xFB-\x03\x02\x02\x02\xFC\xFD\t\v\x02\x02\xFD\xFE\t\x11\x02\x02" +
		"\xFE\xFF\t\x10\x02\x02\xFF\u0100\t\r\x02\x02\u0100\u0101\t\x11\x02\x02" +
		"\u0101\u0102\t\n\x02\x02\u0102\u0103\t\x12\x02\x02\u0103\u0104\t\r\x02" +
		"\x02\u0104/\x03\x02\x02\x02\u0105\u0106\t\x04\x02\x02\u0106\u0107\t\x13" +
		"\x02\x02\u0107\u0108\t\x14\x02\x02\u0108\u0109\t\r\x02\x02\u0109\u010A" +
		"\t\x0F\x02\x02\u010A1\x03\x02\x02\x02\u010B\u010C\t\x15\x02\x02\u010C" +
		"\u010D\t\t\x02\x02\u010D\u010E\t\x16\x02\x02\u010E\u010F\t\x10\x02\x02" +
		"\u010F\u0110\t\x04\x02\x02\u01103\x03\x02\x02\x02\u0111\u0112\t\x15\x02" +
		"\x02\u0112\u0113\t\x17\x02\x02\u0113\u0114\t\x18\x02\x02\u0114\u0115\t" +
		"\x13\x02\x02\u01155\x03\x02\x02\x02\u0116\u0117\t\x15\x02\x02\u0117\u0118" +
		"\t\x19\x02\x02\u0118\u0119\t\x16\x02\x02\u0119\u011A\t\x16\x02\x02\u011A" +
		"7\x03\x02\x02\x02\u011B\u011C\t\x1A\x02\x02\u011C\u011D\t\x18\x02\x02" +
		"\u011D\u011E\t\x19\x02\x02\u011E\u011F\t\x17\x02\x02\u011F\u0120\t\x10" +
		"\x02\x02\u01209\x03\x02\x02\x02\u0121\u0122\t\x11\x02\x02\u0122\u0123" +
		"\t\n\x02\x02\u0123;\x03\x02\x02\x02\u0124\u0125\t\x11\x02\x02\u0125\u0126" +
		"\t\n\x02\x02\u0126\u0127\t\r\x02\x02\u0127\u0128\t\x04\x02\x02\u0128\u0129" +
		"\t\x17\x02\x02\u0129\u012A\t\x1B\x02\x02\u012A\u012B\t\t\x02\x02\u012B" +
		"\u012C\t\x16\x02\x02\u012C=\x03\x02\x02\x02\u012D\u012E\t\x11\x02\x02" +
		"\u012E\u012F\t\x10\x02\x02\u012F?\x03\x02\x02\x02\u0130\u0131\t\x1C\x02" +
		"\x02\u0131\u0132\t\x18\x02\x02\u0132\u0133\t\x11\x02\x02\u0133\u0134\t" +
		"\n\x02\x02\u0134A\x03\x02\x02\x02\u0135\u0136\t\x16\x02\x02\u0136\u0137" +
		"\t\x04\x02\x02\u0137\u0138\t\x15\x02\x02\u0138\u0139\t\r\x02\x02\u0139" +
		"C\x03\x02\x02\x02\u013A\u013B\t\x13\x02\x02\u013B\u013C\t\x11\x02\x02" +
		"\u013C\u013D\t\n\x02\x02\u013D\u013E\t\x19\x02\x02\u013E\u013F\t\r\x02" +
		"\x02\u013F\u0140\t\x04\x02\x02\u0140\u0141\t\x10\x02\x02\u0141E\x03\x02" +
		"\x02\x02\u0142\u0143\t\x13\x02\x02\u0143\u0144\t\x18\x02\x02\u0144\u0145" +
		"\t\n\x02\x02\u0145\u0146\t\r\x02\x02\u0146\u0147\t\x1A\x02\x02\u0147\u0148" +
		"\t\x10\x02\x02\u0148G\x03\x02\x02\x02\u0149\u014A\t\n\x02\x02\u014A\u014B" +
		"\t\x18\x02\x02\u014B\u014C\t\r\x02\x02\u014CI\x03\x02\x02\x02\u014D\u014E" +
		"\t\n\x02\x02\u014E\u014F\t\x19\x02\x02\u014F\u0150\t\x16\x02\x02\u0150" +
		"\u0151\t\x16\x02\x02\u0151K\x03\x02\x02\x02\u0152\u0153\t\x18\x02\x02" +
		"\u0153\u0154\t\n\x02\x02\u0154M\x03\x02\x02\x02\u0155\u0156\t\x18\x02" +
		"\x02\u0156\u0157\t\x17\x02\x02\u0157O\x03\x02\x02\x02\u0158\u0159\t\x17" +
		"\x02\x02\u0159\u015A\t\x11\x02\x02\u015A\u015B\t\x1D\x02\x02\u015B\u015C" +
		"\t\x1A\x02\x02\u015C\u015D\t\r\x02\x02\u015DQ\x03\x02\x02\x02\u015E\u015F" +
		"\t\x10\x02\x02\u015F\u0160\t\x04\x02\x02\u0160\u0161\t\x12\x02\x02\u0161" +
		"\u0162\t\x18\x02\x02\u0162\u0163\t\n\x02\x02\u0163\u0164\t\v\x02\x02\u0164" +
		"\u0165\t\x10\x02\x02\u0165S\x03\x02\x02\x02\u0166\u0167\t\x10\x02\x02" +
		"\u0167\u0168\t\x04\x02\x02\u0168\u0169\t\x16\x02\x02\u0169\u016A\t\x04" +
		"\x02\x02\u016A\u016B\t\x12\x02\x02\u016B\u016C\t\r\x02\x02\u016CU\x03" +
		"\x02\x02\x02\u016D\u016E\t\r\x02\x02\u016E\u016F\t\x11\x02\x02\u016F\u0170" +
		"\t\x13\x02\x02\u0170\u0171\t\x04\x02\x02\u0171W\x03\x02\x02\x02\u0172" +
		"\u0173\t\r\x02\x02\u0173\u0174\t\x11\x02\x02\u0174\u0175\t\x13\x02\x02" +
		"\u0175\u0176\t\x04\x02\x02\u0176\u0177\t\x10\x02\x02\u0177\u0178\t\r\x02" +
		"\x02\u0178\u0179\t\t\x02\x02\u0179\u017A\t\x13\x02\x02\u017A\u017B\t\x14" +
		"\x02\x02\u017BY\x03\x02\x02\x02\u017C\u017D\t\r\x02\x02\u017D\u017E\t" +
		"\x17\x02\x02\u017E\u017F\t\x19\x02\x02\u017F\u0180\t\x04\x02\x02\u0180" +
		"[\x03\x02\x02\x02\u0181\u0182\t\x0E\x02\x02\u0182\u0183\t\x1A\x02\x02" +
		"\u0183\u0184\t\x04\x02\x02\u0184\u0185\t\x17\x02\x02\u0185\u0186\t\x04" +
		"\x02\x02\u0186]\x03\x02\x02\x02\u0187\u0188\t\x0F\x02\x02\u0188\u0189" +
		"\t\x04\x02\x02\u0189\u018A\t\t\x02\x02\u018A\u018B\t\x17\x02\x02\u018B" +
		"\u018C\t\x10\x02\x02\u018C_\x03\x02\x02\x02\u018D\u018E\x07>\x02\x02\u018E" +
		"a\x03\x02\x02\x02\u018F\u0190\x07>\x02\x02\u0190\u0191\x07?\x02\x02\u0191" +
		"c\x03\x02\x02\x02\u0192\u0193\x07@\x02\x02\u0193e\x03\x02\x02\x02\u0194" +
		"\u0195\x07@\x02\x02\u0195\u0196\x07?\x02\x02\u0196g\x03\x02\x02\x02\u0197" +
		"\u0198\x07?\x02\x02\u0198i\x03\x02\x02\x02\u0199\u019A\x07#\x02\x02\u019A" +
		"\u019E\x07?\x02\x02\u019B\u019C\x07>\x02\x02\u019C\u019E\x07@\x02\x02" +
		"\u019D\u0199\x03\x02\x02\x02\u019D\u019B\x03\x02\x02\x02\u019Ek\x03\x02" +
		"\x02\x02\u019F\u01A0\x07-\x02\x02\u01A0m\x03\x02\x02\x02\u01A1\u01A2\x07" +
		"/\x02\x02\u01A2o\x03\x02\x02\x02\u01A3\u01A4\x07,\x02\x02\u01A4q\x03\x02" +
		"\x02\x02\u01A5\u01A6\x071\x02\x02\u01A6s\x03\x02\x02\x02\u01A7\u01A8\x07" +
		"\'\x02\x02\u01A8u\x03\x02\x02\x02\u01A9\u01AA\x07*\x02\x02\u01AAw\x03" +
		"\x02\x02\x02\u01AB\u01AC\x07+\x02\x02\u01ACy\x03\x02\x02\x02\u01AD\u01AE" +
		"\x07]\x02\x02\u01AE{\x03\x02\x02\x02\u01AF\u01B0\x07_\x02\x02\u01B0}\x03" +
		"\x02\x02\x02\u01B1\u01B2\x07.\x02\x02\u01B2\x7F\x03\x02\x02\x02\u01B3" +
		"\u01B4\x070\x02\x02\u01B4\x81\x03\x02\x02\x02\u01B5\u01B6\x07<\x02\x02" +
		"\u01B6\x83\x03\x02\x02\x02\u01B7\u01B8\x07#\x02\x02\u01B8\x85\x03\x02" +
		"\x02\x02\u01B9\u01BD\t\x1E\x02\x02\u01BA\u01BC\t\x1F\x02\x02\u01BB\u01BA" +
		"\x03\x02\x02\x02\u01BC\u01BF\x03\x02\x02\x02\u01BD\u01BB\x03\x02\x02\x02" +
		"\u01BD\u01BE\x03\x02\x02\x02\u01BE\x87\x03\x02\x02\x02\u01BF\u01BD\x03" +
		"\x02\x02\x02\u01C0\u01C5\x07b\x02\x02\u01C1\u01C4\x05\x16\n\x02\u01C2" +
		"\u01C4\n \x02\x02\u01C3\u01C1\x03\x02\x02\x02\u01C3\u01C2\x03\x02\x02" +
		"\x02\u01C4\u01C7\x03\x02\x02\x02\u01C5\u01C3\x03\x02\x02\x02\u01C5\u01C6" +
		"\x03\x02\x02\x02\u01C6\u01C8\x03\x02\x02\x02\u01C7\u01C5\x03\x02\x02\x02" +
		"\u01C8\u01C9\x07b\x02\x02\u01C9\u01CA\bC\x05\x02\u01CA\x89\x03\x02\x02" +
		"\x02\u01CB\u01CC\x07\x7F\x02\x02\u01CC\u01CD\x03\x02\x02\x02\u01CD\u01CE" +
		"\bD\x06\x02\u01CE\x8B\x03\x02\x02\x02\u01CF\u01D0\x07%\x02\x02\u01D0\u01D1" +
		"\x07}\x02\x02\u01D1\u01D2\x03\x02\x02\x02\u01D2\u01D3\bE\x07\x02\u01D3" +
		"\x8D\x03\x02\x02\x02\u01D4\u01D5\x07^\x02\x02\u01D5\u01D6\x07%\x02\x02" +
		"\u01D6\u01DB\x07}\x02\x02\u01D7\u01DB\n!\x02\x02\u01D8\u01D9\x07%\x02" +
		"\x02\u01D9\u01DB\x06F\x02\x02\u01DA\u01D4\x03\x02\x02\x02\u01DA\u01D7" +
		"\x03\x02\x02\x02\u01DA\u01D8\x03\x02\x02\x02\u01DB\u01DC\x03\x02\x02\x02" +
		"\u01DC\u01DA\x03\x02\x02\x02\u01DC\u01DD\x03\x02\x02\x02\u01DD\u01DE\x03" +
		"\x02\x02\x02\u01DE\u01DF\bF\b\x02\u01DF\x8F\x03\x02\x02\x02\u01E0\u01EB" +
		"\x05\b\x03\x02\u01E1\u01E4\x05\x16\n\x02\u01E2\u01E4\n\"\x02\x02\u01E3" +
		"\u01E1\x03\x02\x02\x02\u01E3\u01E2\x03\x02\x02\x02\u01E4\u01E5\x03\x02" +
		"\x02\x02\u01E5\u01E3\x03\x02\x02\x02\u01E5\u01E6\x03\x02\x02\x02\u01E6" +
		"\u01E8\x03\x02\x02\x02\u01E7\u01E9\x05\b\x03\x02\u01E8\u01E7\x03\x02\x02" +
		"\x02\u01E8\u01E9\x03\x02\x02\x02\u01E9\u01EB\x03\x02\x02\x02\u01EA\u01E0" +
		"\x03\x02\x02\x02\u01EA\u01E3\x03\x02\x02\x02\u01EB\x91\x03\x02\x02\x02" +
		"\u01EC\u01ED\x07)\x02\x02\u01ED\u01EE\x03\x02\x02\x02\u01EE\u01EF\bH\x07" +
		"\x02\u01EF\x93\x03\x02\x02\x02\u01F0\u01FB\x05\b\x03\x02\u01F1\u01F4\x05" +
		"\x16\n\x02\u01F2\u01F4\n#\x02\x02\u01F3\u01F1\x03\x02\x02\x02\u01F3\u01F2" +
		"\x03\x02\x02\x02\u01F4\u01F5\x03\x02\x02\x02\u01F5\u01F3\x03\x02\x02\x02" +
		"\u01F5\u01F6\x03\x02\x02\x02\u01F6\u01F8\x03\x02\x02\x02\u01F7\u01F9\x05" +
		"\b\x03\x02\u01F8\u01F7\x03\x02\x02\x02\u01F8\u01F9\x03\x02\x02\x02\u01F9" +
		"\u01FB\x03\x02\x02\x02\u01FA\u01F0\x03\x02\x02\x02\u01FA\u01F3\x03\x02" +
		"\x02\x02\u01FB\x95\x03\x02\x02\x02\u01FC\u01FD\x07$\x02\x02\u01FD\u01FE" +
		"\x03\x02\x02\x02\u01FE\u01FF\bJ\x07\x02\u01FF\x97\x03\x02\x02\x02\x1E" +
		"\x02\x03\x04\x05\x9A\xA1\xA8\xAF\xB1\xB7\xC0\xC3\xDC\xE1\u019D\u01BD\u01C3" +
		"\u01C5\u01DA\u01DC\u01E3\u01E5\u01E8\u01EA\u01F3\u01F5\u01F8\u01FA\t\x02" +
		"\x03\x02\x07\x04\x02\x07\x05\x02\x03C\x02\x07\x03\x02\x06\x02\x02\x03" +
		"F\x03";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!BlazeExpressionLexer.__ATN) {
			BlazeExpressionLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(BlazeExpressionLexer._serializedATN));
		}

		return BlazeExpressionLexer.__ATN;
	}

}

