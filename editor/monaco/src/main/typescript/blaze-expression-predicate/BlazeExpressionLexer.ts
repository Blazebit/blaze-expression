// Generated from target/antlr4/BlazeExpressionLexer.g4 by ANTLR 4.9.0-SNAPSHOT


import {LiteralFactory} from "./../LiteralFactory";


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class BlazeExpressionLexer extends Lexer {
	public static readonly WS = 1;
	public static readonly START_QUOTE = 2;
	public static readonly START_DOUBLE_QUOTE = 3;
	public static readonly INTEGER_LITERAL = 4;
	public static readonly NUMERIC_LITERAL = 5;
	public static readonly LEADING_ZERO_INTEGER_LITERAL = 6;
	public static readonly AND = 7;
	public static readonly BETWEEN = 8;
	public static readonly DATE = 9;
	public static readonly DAYS = 10;
	public static readonly EMPTY = 11;
	public static readonly FALSE = 12;
	public static readonly HOURS = 13;
	public static readonly IN = 14;
	public static readonly INTERVAL = 15;
	public static readonly IS = 16;
	public static readonly MINUTES = 17;
	public static readonly MONTHS = 18;
	public static readonly NOT = 19;
	public static readonly NULL = 20;
	public static readonly OR = 21;
	public static readonly SECONDS = 22;
	public static readonly TIME = 23;
	public static readonly TIMESTAMP = 24;
	public static readonly TRUE = 25;
	public static readonly YEARS = 26;
	public static readonly LESS = 27;
	public static readonly LESS_EQUAL = 28;
	public static readonly GREATER = 29;
	public static readonly GREATER_EQUAL = 30;
	public static readonly EQUAL = 31;
	public static readonly NOT_EQUAL = 32;
	public static readonly PLUS = 33;
	public static readonly MINUS = 34;
	public static readonly ASTERISK = 35;
	public static readonly SLASH = 36;
	public static readonly PERCENT = 37;
	public static readonly LP = 38;
	public static readonly RP = 39;
	public static readonly LB = 40;
	public static readonly RB = 41;
	public static readonly COMMA = 42;
	public static readonly DOT = 43;
	public static readonly COLON = 44;
	public static readonly EXCLAMATION_MARK = 45;
	public static readonly IDENTIFIER = 46;
	public static readonly QUOTED_IDENTIFIER = 47;
	public static readonly EXPRESSION_END = 48;
	public static readonly EXPRESSION_START = 49;
	public static readonly TEXT = 50;
	public static readonly TEXT_IN_QUOTE = 51;
	public static readonly END_QUOTE = 52;
	public static readonly TEXT_IN_DOUBLE_QUOTE = 53;
	public static readonly END_DOUBLE_QUOTE = 54;
	public static readonly TEMPLATE = 1;
	public static readonly QUOTE_STRING = 2;
	public static readonly DOUBLE_QUOTE_STRING = 3;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE", "TEMPLATE", "QUOTE_STRING", "DOUBLE_QUOTE_STRING",
	];

	public static readonly ruleNames: string[] = [
		"WS", "EOL", "DIGIT", "DIGITS", "DIGIT_NOT_ZERO", "INTEGER", "EXPONENT_PART", 
		"SIGNED_INTEGER", "ESCAPE_SEQUENCE", "HEX_DIGIT", "UNICODE_ESCAPE", "START_QUOTE", 
		"START_DOUBLE_QUOTE", "INTEGER_LITERAL", "NUMERIC_LITERAL", "LEADING_ZERO_INTEGER_LITERAL", 
		"AND", "BETWEEN", "DATE", "DAYS", "EMPTY", "FALSE", "HOURS", "IN", "INTERVAL", 
		"IS", "MINUTES", "MONTHS", "NOT", "NULL", "OR", "SECONDS", "TIME", "TIMESTAMP", 
		"TRUE", "YEARS", "LESS", "LESS_EQUAL", "GREATER", "GREATER_EQUAL", "EQUAL", 
		"NOT_EQUAL", "PLUS", "MINUS", "ASTERISK", "SLASH", "PERCENT", "LP", "RP", 
		"LB", "RB", "COMMA", "DOT", "COLON", "EXCLAMATION_MARK", "IDENTIFIER", 
		"QUOTED_IDENTIFIER", "EXPRESSION_END", "EXPRESSION_START", "TEXT", "TEXT_IN_QUOTE", 
		"END_QUOTE", "TEXT_IN_DOUBLE_QUOTE", "END_DOUBLE_QUOTE",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, "'<'", 
		"'<='", "'>'", "'>='", "'='", undefined, "'+'", "'-'", "'*'", "'/'", "'%'", 
		"'('", "')'", "'['", "']'", "','", "'.'", "':'", "'!'", undefined, undefined, 
		"'}'", "'#{'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "WS", "START_QUOTE", "START_DOUBLE_QUOTE", "INTEGER_LITERAL", 
		"NUMERIC_LITERAL", "LEADING_ZERO_INTEGER_LITERAL", "AND", "BETWEEN", "DATE", 
		"DAYS", "EMPTY", "FALSE", "HOURS", "IN", "INTERVAL", "IS", "MINUTES", 
		"MONTHS", "NOT", "NULL", "OR", "SECONDS", "TIME", "TIMESTAMP", "TRUE", 
		"YEARS", "LESS", "LESS_EQUAL", "GREATER", "GREATER_EQUAL", "EQUAL", "NOT_EQUAL", 
		"PLUS", "MINUS", "ASTERISK", "SLASH", "PERCENT", "LP", "RP", "LB", "RB", 
		"COMMA", "DOT", "COLON", "EXCLAMATION_MARK", "IDENTIFIER", "QUOTED_IDENTIFIER", 
		"EXPRESSION_END", "EXPRESSION_START", "TEXT", "TEXT_IN_QUOTE", "END_QUOTE", 
		"TEXT_IN_DOUBLE_QUOTE", "END_DOUBLE_QUOTE",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(BlazeExpressionLexer._LITERAL_NAMES, BlazeExpressionLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return BlazeExpressionLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	private getText(): string {
	    return this.text;
	}
	private setText(text: string) {
	    this.text = text;
	}


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(BlazeExpressionLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "BlazeExpressionLexer.g4"; }

	// @Override
	public get ruleNames(): string[] { return BlazeExpressionLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return BlazeExpressionLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return BlazeExpressionLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return BlazeExpressionLexer.modeNames; }

	// @Override
	public action(_localctx: RuleContext, ruleIndex: number, actionIndex: number): void {
		switch (ruleIndex) {
		case 56:
			this.QUOTED_IDENTIFIER_action(_localctx, actionIndex);
			break;

		case 59:
			this.TEXT_action(_localctx, actionIndex);
			break;
		}
	}
	private QUOTED_IDENTIFIER_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 0:
			 this.setText(LiteralFactory.unescapeString(this.getText())); 
			break;
		}
	}
	private TEXT_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 1:
			 this.setText(LiteralFactory.unescapeTemplateText(this.getText())); 
			break;
		}
	}
	// @Override
	public sempred(_localctx: RuleContext, ruleIndex: number, predIndex: number): boolean {
		switch (ruleIndex) {
		case 59:
			return this.TEXT_sempred(_localctx, predIndex);
		}
		return true;
	}
	private TEXT_sempred(_localctx: RuleContext, predIndex: number): boolean {
		switch (predIndex) {
		case 0:
			return  this._input.LA(1) != LiteralFactory.OPEN_BRACKET ;
		}
		return true;
	}

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x028\u01BB\b\x01" +
		"\b\x01\b\x01\b\x01\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t" +
		"\x05\x04\x06\t\x06\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t" +
		"\v\x04\f\t\f\x04\r\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11" +
		"\t\x11\x04\x12\t\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16" +
		"\t\x16\x04\x17\t\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B" +
		"\t\x1B\x04\x1C\t\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t" +
		" \x04!\t!\x04\"\t\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(" +
		"\x04)\t)\x04*\t*\x04+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041" +
		"\t1\x042\t2\x043\t3\x044\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04" +
		":\t:\x04;\t;\x04<\t<\x04=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x03\x02\x03" +
		"\x02\x05\x02\x89\n\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x05\x03" +
		"\x90\n\x03\x03\x04\x03\x04\x03\x05\x06\x05\x95\n\x05\r\x05\x0E\x05\x96" +
		"\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x05\x07\x9E\n\x07\x05\x07\xA0" +
		"\n\x07\x03\b\x03\b\x03\b\x03\t\x05\t\xA6\n\t\x03\t\x03\t\x03\n\x03\n\x03" +
		"\n\x03\n\x03\n\x05\n\xAF\n\n\x03\n\x05\n\xB2\n\n\x03\v\x03\v\x03\f\x03" +
		"\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E" +
		"\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x10\x05\x10" +
		"\xCB\n\x10\x03\x10\x03\x10\x03\x10\x05\x10\xD0\n\x10\x03\x11\x03\x11\x03" +
		"\x11\x03\x12\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03\x13\x03" +
		"\x13\x03\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03" +
		"\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x16\x03" +
		"\x16\x03\x16\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x18\x03" +
		"\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19\x03\x1A\x03" +
		"\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03" +
		"\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03" +
		"\x1C\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1E\x03" +
		"\x1E\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03 \x03" +
		" \x03 \x03!\x03!\x03!\x03!\x03!\x03!\x03!\x03!\x03\"\x03\"\x03\"\x03\"" +
		"\x03\"\x03#\x03#\x03#\x03#\x03#\x03#\x03#\x03#\x03#\x03#\x03$\x03$\x03" +
		"$\x03$\x03$\x03%\x03%\x03%\x03%\x03%\x03%\x03&\x03&\x03\'\x03\'\x03\'" +
		"\x03(\x03(\x03)\x03)\x03)\x03*\x03*\x03+\x03+\x03+\x03+\x05+\u0159\n+" +
		"\x03,\x03,\x03-\x03-\x03.\x03.\x03/\x03/\x030\x030\x031\x031\x032\x03" +
		"2\x033\x033\x034\x034\x035\x035\x036\x036\x037\x037\x038\x038\x039\x03" +
		"9\x079\u0177\n9\f9\x0E9\u017A\v9\x03:\x03:\x03:\x07:\u017F\n:\f:\x0E:" +
		"\u0182\v:\x03:\x03:\x03:\x03;\x03;\x03;\x03;\x03<\x03<\x03<\x03<\x03<" +
		"\x03=\x03=\x03=\x03=\x03=\x03=\x06=\u0196\n=\r=\x0E=\u0197\x03=\x03=\x03" +
		">\x03>\x03>\x06>\u019F\n>\r>\x0E>\u01A0\x03>\x05>\u01A4\n>\x05>\u01A6" +
		"\n>\x03?\x03?\x03?\x03?\x03@\x03@\x03@\x06@\u01AF\n@\r@\x0E@\u01B0\x03" +
		"@\x05@\u01B4\n@\x05@\u01B6\n@\x03A\x03A\x03A\x03A\x02\x02\x02B\x06\x02" +
		"\x03\b\x02\x02\n\x02\x02\f\x02\x02\x0E\x02\x02\x10\x02\x02\x12\x02\x02" +
		"\x14\x02\x02\x16\x02\x02\x18\x02\x02\x1A\x02\x02\x1C\x02\x04\x1E\x02\x05" +
		" \x02\x06\"\x02\x07$\x02\b&\x02\t(\x02\n*\x02\v,\x02\f.\x02\r0\x02\x0E" +
		"2\x02\x0F4\x02\x106\x02\x118\x02\x12:\x02\x13<\x02\x14>\x02\x15@\x02\x16" +
		"B\x02\x17D\x02\x18F\x02\x19H\x02\x1AJ\x02\x1BL\x02\x1CN\x02\x1DP\x02\x1E" +
		"R\x02\x1FT\x02 V\x02!X\x02\"Z\x02#\\\x02$^\x02%`\x02&b\x02\'d\x02(f\x02" +
		")h\x02*j\x02+l\x02,n\x02-p\x02.r\x02/t\x020v\x021x\x022z\x023|\x024~\x02" +
		"5\x80\x026\x82\x027\x84\x028\x06\x02\x03\x04\x05\"\x05\x02\v\v\x0E\x0E" +
		"\"\"\x04\x02\f\f\x0F\x0F\x04\x02GGgg\x04\x02--//\x07\x02ddhhppttvv\x04" +
		"\x02))^^\x05\x022;CHch\x04\x02CCcc\x04\x02PPpp\x04\x02FFff\x04\x02DDd" +
		"d\x04\x02VVvv\x04\x02YYyy\x04\x02[[{{\x04\x02UUuu\x04\x02OOoo\x04\x02" +
		"RRrr\x04\x02HHhh\x04\x02NNnn\x04\x02JJjj\x04\x02QQqq\x04\x02WWww\x04\x02" +
		"TTtt\x04\x02KKkk\x04\x02XXxx\x04\x02EEee\x07\x02&&C\\aac|\x82\x00\b\x02" +
		"&&2;C\\aac|\x82\x00\x06\x02\f\f\x0F\x0F^^bb\x03\x02%%\x06\x02\f\f\x0F" +
		"\x0F))^^\x06\x02\f\f\x0F\x0F$$^^\x02\u01C7\x02\x06\x03\x02\x02\x02\x02" +
		"\x1C\x03\x02\x02\x02\x02\x1E\x03\x02\x02\x02\x02 \x03\x02\x02\x02\x02" +
		"\"\x03\x02\x02\x02\x02$\x03\x02\x02\x02\x02&\x03\x02\x02\x02\x02(\x03" +
		"\x02\x02\x02\x02*\x03\x02\x02\x02\x02,\x03\x02\x02\x02\x02.\x03\x02\x02" +
		"\x02\x020\x03\x02\x02\x02\x022\x03\x02\x02\x02\x024\x03\x02\x02\x02\x02" +
		"6\x03\x02\x02\x02\x028\x03\x02\x02\x02\x02:\x03\x02\x02\x02\x02<\x03\x02" +
		"\x02\x02\x02>\x03\x02\x02\x02\x02@\x03\x02\x02\x02\x02B\x03\x02\x02\x02" +
		"\x02D\x03\x02\x02\x02\x02F\x03\x02\x02\x02\x02H\x03\x02\x02\x02\x02J\x03" +
		"\x02\x02\x02\x02L\x03\x02\x02\x02\x02N\x03\x02\x02\x02\x02P\x03\x02\x02" +
		"\x02\x02R\x03\x02\x02\x02\x02T\x03\x02\x02\x02\x02V\x03\x02\x02\x02\x02" +
		"X\x03\x02\x02\x02\x02Z\x03\x02\x02\x02\x02\\\x03\x02\x02\x02\x02^\x03" +
		"\x02\x02\x02\x02`\x03\x02\x02\x02\x02b\x03\x02\x02\x02\x02d\x03\x02\x02" +
		"\x02\x02f\x03\x02\x02\x02\x02h\x03\x02\x02\x02\x02j\x03\x02\x02\x02\x02" +
		"l\x03\x02\x02\x02\x02n\x03\x02\x02\x02\x02p\x03\x02\x02\x02\x02r\x03\x02" +
		"\x02\x02\x02t\x03\x02\x02\x02\x02v\x03\x02\x02\x02\x02x\x03\x02\x02\x02" +
		"\x03z\x03\x02\x02\x02\x03|\x03\x02\x02\x02\x04~\x03\x02\x02\x02\x04\x80" +
		"\x03\x02\x02\x02\x05\x82\x03\x02\x02\x02\x05\x84\x03\x02\x02\x02\x06\x88" +
		"\x03\x02\x02\x02\b\x8F\x03\x02\x02\x02\n\x91\x03\x02\x02\x02\f\x94\x03" +
		"\x02\x02\x02\x0E\x98\x03\x02\x02\x02\x10\x9F\x03\x02\x02\x02\x12\xA1\x03" +
		"\x02\x02\x02\x14\xA5\x03\x02\x02\x02\x16\xB1\x03\x02\x02\x02\x18\xB3\x03" +
		"\x02\x02\x02\x1A\xB5\x03\x02\x02\x02\x1C\xBC\x03\x02\x02\x02\x1E\xC0\x03" +
		"\x02\x02\x02 \xC4\x03\x02\x02\x02\"\xCF\x03\x02\x02\x02$\xD1\x03\x02\x02" +
		"\x02&\xD4\x03\x02\x02\x02(\xD8\x03\x02\x02\x02*\xE0\x03\x02\x02\x02,\xE5" +
		"\x03\x02\x02\x02.\xEA\x03\x02\x02\x020\xF0\x03\x02\x02\x022\xF6\x03\x02" +
		"\x02\x024\xFC\x03\x02\x02\x026\xFF\x03\x02\x02\x028\u0108\x03\x02\x02" +
		"\x02:\u010B\x03\x02\x02\x02<\u0113\x03\x02\x02\x02>\u011A\x03\x02\x02" +
		"\x02@\u011E\x03\x02\x02\x02B\u0123\x03\x02\x02\x02D\u0126\x03\x02\x02" +
		"\x02F\u012E\x03\x02\x02\x02H\u0133\x03\x02\x02\x02J\u013D\x03\x02\x02" +
		"\x02L\u0142\x03\x02\x02\x02N\u0148\x03\x02\x02\x02P\u014A\x03\x02\x02" +
		"\x02R\u014D\x03\x02\x02\x02T\u014F\x03\x02\x02\x02V\u0152\x03\x02\x02" +
		"\x02X\u0158\x03\x02\x02\x02Z\u015A\x03\x02\x02\x02\\\u015C\x03\x02\x02" +
		"\x02^\u015E\x03\x02\x02\x02`\u0160\x03\x02\x02\x02b\u0162\x03\x02\x02" +
		"\x02d\u0164\x03\x02\x02\x02f\u0166\x03\x02\x02\x02h\u0168\x03\x02\x02" +
		"\x02j\u016A\x03\x02\x02\x02l\u016C\x03\x02\x02\x02n\u016E\x03\x02\x02" +
		"\x02p\u0170\x03\x02\x02\x02r\u0172\x03\x02\x02\x02t\u0174\x03\x02\x02" +
		"\x02v\u017B\x03\x02\x02\x02x\u0186\x03\x02\x02\x02z\u018A\x03\x02\x02" +
		"\x02|\u0195\x03\x02\x02\x02~\u01A5\x03\x02\x02\x02\x80\u01A7\x03\x02\x02" +
		"\x02\x82\u01B5\x03\x02\x02\x02\x84\u01B7\x03\x02\x02\x02\x86\x89\t\x02" +
		"\x02\x02\x87\x89\x05\b\x03\x02\x88\x86\x03\x02\x02\x02\x88\x87\x03\x02" +
		"\x02\x02\x89\x8A\x03\x02\x02\x02\x8A\x8B\b\x02\x02\x02\x8B\x07\x03\x02" +
		"\x02\x02\x8C\x8D\x07\x0F\x02\x02\x8D\x90\x07\f\x02\x02\x8E\x90\t\x03\x02" +
		"\x02\x8F\x8C\x03\x02\x02\x02\x8F\x8E\x03\x02\x02\x02\x90\t\x03\x02\x02" +
		"\x02\x91\x92\x042;\x02\x92\v\x03\x02\x02\x02\x93\x95\x05\n\x04\x02\x94" +
		"\x93\x03\x02\x02\x02\x95\x96\x03\x02\x02\x02\x96\x94\x03\x02\x02\x02\x96" +
		"\x97\x03\x02\x02\x02\x97\r\x03\x02\x02\x02\x98\x99\x043;\x02\x99\x0F\x03" +
		"\x02\x02\x02\x9A\xA0\x072\x02\x02\x9B\x9D\x05\x0E\x06\x02\x9C\x9E\x05" +
		"\f\x05\x02\x9D\x9C\x03\x02\x02\x02\x9D\x9E\x03\x02\x02\x02\x9E\xA0\x03" +
		"\x02\x02\x02\x9F\x9A\x03\x02\x02\x02\x9F\x9B\x03\x02\x02\x02\xA0\x11\x03" +
		"\x02\x02\x02\xA1\xA2\t\x04\x02\x02\xA2\xA3\x05\x14\t\x02\xA3\x13\x03\x02" +
		"\x02\x02\xA4\xA6\t\x05\x02\x02\xA5\xA4\x03\x02\x02\x02\xA5\xA6\x03\x02" +
		"\x02\x02\xA6\xA7\x03\x02\x02\x02\xA7\xA8\x05\f\x05\x02\xA8\x15\x03\x02" +
		"\x02\x02\xA9\xAE\x07^\x02\x02\xAA\xAF\t\x06\x02\x02\xAB\xAC\x07^\x02\x02" +
		"\xAC\xAF\x07$\x02\x02\xAD\xAF\t\x07\x02\x02\xAE\xAA\x03\x02\x02\x02\xAE" +
		"\xAB\x03\x02\x02\x02\xAE\xAD\x03\x02\x02\x02\xAF\xB2\x03\x02\x02\x02\xB0" +
		"\xB2\x05\x1A\f\x02\xB1\xA9\x03\x02\x02\x02\xB1\xB0\x03\x02\x02\x02\xB2" +
		"\x17\x03\x02\x02\x02\xB3\xB4\t\b\x02\x02\xB4\x19\x03\x02\x02\x02\xB5\xB6" +
		"\x07^\x02\x02\xB6\xB7\x07w\x02\x02\xB7\xB8\x05\x18\v\x02\xB8\xB9\x05\x18" +
		"\v\x02\xB9\xBA\x05\x18\v\x02\xBA\xBB\x05\x18\v\x02\xBB\x1B\x03\x02\x02" +
		"\x02\xBC\xBD\x07)\x02\x02\xBD\xBE\x03\x02\x02\x02\xBE\xBF\b\r\x03\x02" +
		"\xBF\x1D\x03\x02\x02\x02\xC0\xC1\x07$\x02\x02\xC1\xC2\x03\x02\x02\x02" +
		"\xC2\xC3\b\x0E\x04\x02\xC3\x1F\x03\x02\x02\x02\xC4\xC5\x05\x10\x07\x02" +
		"\xC5!\x03\x02\x02\x02\xC6\xC7\x05\x10\x07\x02\xC7\xC8\x070\x02\x02\xC8" +
		"\xCA\x05\f\x05\x02\xC9\xCB\x05\x12\b\x02\xCA\xC9\x03\x02\x02\x02\xCA\xCB" +
		"\x03\x02\x02\x02\xCB\xD0\x03\x02\x02\x02\xCC\xCD\x05\x10\x07\x02\xCD\xCE" +
		"\x05\x12\b\x02\xCE\xD0\x03\x02\x02\x02\xCF\xC6\x03\x02\x02\x02\xCF\xCC" +
		"\x03\x02\x02\x02\xD0#\x03\x02\x02\x02\xD1\xD2\x072\x02\x02\xD2\xD3\x05" +
		"\f\x05\x02\xD3%\x03\x02\x02\x02\xD4\xD5\t\t\x02\x02\xD5\xD6\t\n\x02\x02" +
		"\xD6\xD7\t\v\x02\x02\xD7\'\x03\x02\x02\x02\xD8\xD9\t\f\x02\x02\xD9\xDA" +
		"\t\x04\x02\x02\xDA\xDB\t\r\x02\x02\xDB\xDC\t\x0E\x02\x02\xDC\xDD\t\x04" +
		"\x02\x02\xDD\xDE\t\x04\x02\x02\xDE\xDF\t\n\x02\x02\xDF)\x03\x02\x02\x02" +
		"\xE0\xE1\t\v\x02\x02\xE1\xE2\t\t\x02\x02\xE2\xE3\t\r\x02\x02\xE3\xE4\t" +
		"\x04\x02\x02\xE4+\x03\x02\x02\x02\xE5\xE6\t\v\x02\x02\xE6\xE7\t\t\x02" +
		"\x02\xE7\xE8\t\x0F\x02\x02\xE8\xE9\t\x10\x02\x02\xE9-\x03\x02\x02\x02" +
		"\xEA\xEB\t\x04\x02\x02\xEB\xEC\t\x11\x02\x02\xEC\xED\t\x12\x02\x02\xED" +
		"\xEE\t\r\x02\x02\xEE\xEF\t\x0F\x02\x02\xEF/\x03\x02\x02\x02\xF0\xF1\t" +
		"\x13\x02\x02\xF1\xF2\t\t\x02\x02\xF2\xF3\t\x14\x02\x02\xF3\xF4\t\x10\x02" +
		"\x02\xF4\xF5\t\x04\x02\x02\xF51\x03\x02\x02\x02\xF6\xF7\t\x15\x02\x02" +
		"\xF7\xF8\t\x16\x02\x02\xF8\xF9\t\x17\x02\x02\xF9\xFA\t\x18\x02\x02\xFA" +
		"\xFB\t\x10\x02\x02\xFB3\x03\x02\x02\x02\xFC\xFD\t\x19\x02\x02\xFD\xFE" +
		"\t\n\x02\x02\xFE5\x03\x02\x02\x02\xFF\u0100\t\x19\x02\x02\u0100\u0101" +
		"\t\n\x02\x02\u0101\u0102\t\r\x02\x02\u0102\u0103\t\x04\x02\x02\u0103\u0104" +
		"\t\x18\x02\x02\u0104\u0105\t\x1A\x02\x02\u0105\u0106\t\t\x02\x02\u0106" +
		"\u0107\t\x14\x02\x02\u01077\x03\x02\x02\x02\u0108\u0109\t\x19\x02\x02" +
		"\u0109\u010A\t\x10\x02\x02\u010A9\x03\x02\x02\x02\u010B\u010C\t\x11\x02" +
		"\x02\u010C\u010D\t\x19\x02\x02\u010D\u010E\t\n\x02\x02\u010E\u010F\t\x17" +
		"\x02\x02\u010F\u0110\t\r\x02\x02\u0110\u0111\t\x04\x02\x02\u0111\u0112" +
		"\t\x10\x02\x02\u0112;\x03\x02\x02\x02\u0113\u0114\t\x11\x02\x02\u0114" +
		"\u0115\t\x16\x02\x02\u0115\u0116\t\n\x02\x02\u0116\u0117\t\r\x02\x02\u0117" +
		"\u0118\t\x15\x02\x02\u0118\u0119\t\x10\x02\x02\u0119=\x03\x02\x02\x02" +
		"\u011A\u011B\t\n\x02\x02\u011B\u011C\t\x16\x02\x02\u011C\u011D\t\r\x02" +
		"\x02\u011D?\x03\x02\x02\x02\u011E\u011F\t\n\x02\x02\u011F\u0120\t\x17" +
		"\x02\x02\u0120\u0121\t\x14\x02\x02\u0121\u0122\t\x14\x02\x02\u0122A\x03" +
		"\x02\x02\x02\u0123\u0124\t\x16\x02\x02\u0124\u0125\t\x18\x02\x02\u0125" +
		"C\x03\x02\x02\x02\u0126\u0127\t\x10\x02\x02\u0127\u0128\t\x04\x02\x02" +
		"\u0128\u0129\t\x1B\x02\x02\u0129\u012A\t\x16\x02\x02\u012A\u012B\t\n\x02" +
		"\x02\u012B\u012C\t\v\x02\x02\u012C\u012D\t\x10\x02\x02\u012DE\x03\x02" +
		"\x02\x02\u012E\u012F\t\r\x02\x02\u012F\u0130\t\x19\x02\x02\u0130\u0131" +
		"\t\x11\x02\x02\u0131\u0132\t\x04\x02\x02\u0132G\x03\x02\x02\x02\u0133" +
		"\u0134\t\r\x02\x02\u0134\u0135\t\x19\x02\x02\u0135\u0136\t\x11\x02\x02" +
		"\u0136\u0137\t\x04\x02\x02\u0137\u0138\t\x10\x02\x02\u0138\u0139\t\r\x02" +
		"\x02\u0139\u013A\t\t\x02\x02\u013A\u013B\t\x11\x02\x02\u013B\u013C\t\x12" +
		"\x02\x02\u013CI\x03\x02\x02\x02\u013D\u013E\t\r\x02\x02\u013E\u013F\t" +
		"\x18\x02\x02\u013F\u0140\t\x17\x02\x02\u0140\u0141\t\x04\x02\x02\u0141" +
		"K\x03\x02\x02\x02\u0142\u0143\t\x0F\x02\x02\u0143\u0144\t\x04\x02\x02" +
		"\u0144\u0145\t\t\x02\x02\u0145\u0146\t\x18\x02\x02\u0146\u0147\t\x10\x02" +
		"\x02\u0147M\x03\x02\x02\x02\u0148\u0149\x07>\x02\x02\u0149O\x03\x02\x02" +
		"\x02\u014A\u014B\x07>\x02\x02\u014B\u014C\x07?\x02\x02\u014CQ\x03\x02" +
		"\x02\x02\u014D\u014E\x07@\x02\x02\u014ES\x03\x02\x02\x02\u014F\u0150\x07" +
		"@\x02\x02\u0150\u0151\x07?\x02\x02\u0151U\x03\x02\x02\x02\u0152\u0153" +
		"\x07?\x02\x02\u0153W\x03\x02\x02\x02\u0154\u0155\x07#\x02\x02\u0155\u0159" +
		"\x07?\x02\x02\u0156\u0157\x07>\x02\x02\u0157\u0159\x07@\x02\x02\u0158" +
		"\u0154\x03\x02\x02\x02\u0158\u0156\x03\x02\x02\x02\u0159Y\x03\x02\x02" +
		"\x02\u015A\u015B\x07-\x02\x02\u015B[\x03\x02\x02\x02\u015C\u015D\x07/" +
		"\x02\x02\u015D]\x03\x02\x02\x02\u015E\u015F\x07,\x02\x02\u015F_\x03\x02" +
		"\x02\x02\u0160\u0161\x071\x02\x02\u0161a\x03\x02\x02\x02\u0162\u0163\x07" +
		"\'\x02\x02\u0163c\x03\x02\x02\x02\u0164\u0165\x07*\x02\x02\u0165e\x03" +
		"\x02\x02\x02\u0166\u0167\x07+\x02\x02\u0167g\x03\x02\x02\x02\u0168\u0169" +
		"\x07]\x02\x02\u0169i\x03\x02\x02\x02\u016A\u016B\x07_\x02\x02\u016Bk\x03" +
		"\x02\x02\x02\u016C\u016D\x07.\x02\x02\u016Dm\x03\x02\x02\x02\u016E\u016F" +
		"\x070\x02\x02\u016Fo\x03\x02\x02\x02\u0170\u0171\x07<\x02\x02\u0171q\x03" +
		"\x02\x02\x02\u0172\u0173\x07#\x02\x02\u0173s\x03\x02\x02\x02\u0174\u0178" +
		"\t\x1C\x02\x02\u0175\u0177\t\x1D\x02\x02\u0176\u0175\x03\x02\x02\x02\u0177" +
		"\u017A\x03\x02\x02\x02\u0178\u0176\x03\x02\x02\x02\u0178\u0179\x03\x02" +
		"\x02\x02\u0179u\x03\x02\x02\x02\u017A\u0178\x03\x02\x02\x02\u017B\u0180" +
		"\x07b\x02\x02\u017C\u017F\x05\x16\n\x02\u017D\u017F\n\x1E\x02\x02\u017E" +
		"\u017C\x03\x02\x02\x02\u017E\u017D\x03\x02\x02\x02\u017F\u0182\x03\x02" +
		"\x02\x02\u0180\u017E\x03\x02\x02\x02\u0180\u0181\x03\x02\x02\x02\u0181" +
		"\u0183\x03\x02\x02\x02\u0182\u0180\x03\x02\x02\x02\u0183\u0184\x07b\x02" +
		"\x02\u0184\u0185\b:\x05\x02\u0185w\x03\x02\x02\x02\u0186\u0187\x07\x7F" +
		"\x02\x02\u0187\u0188\x03\x02\x02\x02\u0188\u0189\b;\x06\x02\u0189y\x03" +
		"\x02\x02\x02\u018A\u018B\x07%\x02\x02\u018B\u018C\x07}\x02\x02\u018C\u018D" +
		"\x03\x02\x02\x02\u018D\u018E\b<\x07\x02\u018E{\x03\x02\x02\x02\u018F\u0190" +
		"\x07^\x02\x02\u0190\u0191\x07%\x02\x02\u0191\u0196\x07}\x02\x02\u0192" +
		"\u0196\n\x1F\x02\x02\u0193\u0194\x07%\x02\x02\u0194\u0196\x06=\x02\x02" +
		"\u0195\u018F\x03\x02\x02\x02\u0195\u0192\x03\x02\x02\x02\u0195\u0193\x03" +
		"\x02\x02\x02\u0196\u0197\x03\x02\x02\x02\u0197\u0195\x03\x02\x02\x02\u0197" +
		"\u0198\x03\x02\x02\x02\u0198\u0199\x03\x02\x02\x02\u0199\u019A\b=\b\x02" +
		"\u019A}\x03\x02\x02\x02\u019B\u01A6\x05\b\x03\x02\u019C\u019F\x05\x16" +
		"\n\x02\u019D\u019F\n \x02\x02\u019E\u019C\x03\x02\x02\x02\u019E\u019D" +
		"\x03\x02\x02\x02\u019F\u01A0\x03\x02\x02\x02\u01A0\u019E\x03\x02\x02\x02" +
		"\u01A0\u01A1\x03\x02\x02\x02\u01A1\u01A3\x03\x02\x02\x02\u01A2\u01A4\x05" +
		"\b\x03\x02\u01A3\u01A2\x03\x02\x02\x02\u01A3\u01A4\x03\x02\x02\x02\u01A4" +
		"\u01A6\x03\x02\x02\x02\u01A5\u019B\x03\x02\x02\x02\u01A5\u019E\x03\x02" +
		"\x02\x02\u01A6\x7F\x03\x02\x02\x02\u01A7\u01A8\x07)\x02\x02\u01A8\u01A9" +
		"\x03\x02\x02\x02\u01A9\u01AA\b?\x07\x02\u01AA\x81\x03\x02\x02\x02\u01AB" +
		"\u01B6\x05\b\x03\x02\u01AC\u01AF\x05\x16\n\x02\u01AD\u01AF\n!\x02\x02" +
		"\u01AE\u01AC\x03\x02\x02\x02\u01AE\u01AD\x03\x02\x02\x02\u01AF\u01B0\x03" +
		"\x02\x02\x02\u01B0\u01AE\x03\x02\x02\x02\u01B0\u01B1\x03\x02\x02\x02\u01B1" +
		"\u01B3\x03\x02\x02\x02\u01B2\u01B4\x05\b\x03\x02\u01B3\u01B2\x03\x02\x02" +
		"\x02\u01B3\u01B4\x03\x02\x02\x02\u01B4\u01B6\x03\x02\x02\x02\u01B5\u01AB" +
		"\x03\x02\x02\x02\u01B5\u01AE\x03\x02\x02\x02\u01B6\x83\x03\x02\x02\x02" +
		"\u01B7\u01B8\x07$\x02\x02\u01B8\u01B9\x03\x02\x02\x02\u01B9\u01BA\bA\x07" +
		"\x02\u01BA\x85\x03\x02\x02\x02\x1E\x02\x03\x04\x05\x88\x8F\x96\x9D\x9F" +
		"\xA5\xAE\xB1\xCA\xCF\u0158\u0178\u017E\u0180\u0195\u0197\u019E\u01A0\u01A3" +
		"\u01A5\u01AE\u01B0\u01B3\u01B5\t\x02\x03\x02\x07\x04\x02\x07\x05\x02\x03" +
		":\x02\x07\x03\x02\x06\x02\x02\x03=\x03";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!BlazeExpressionLexer.__ATN) {
			BlazeExpressionLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(BlazeExpressionLexer._serializedATN));
		}

		return BlazeExpressionLexer.__ATN;
	}

}

